.TH TIDE42 1 "May 2025" "version 1.1.0" "tide42 Manual"

.SH NAME
tide42 \- an ultra-efficient, Neovim-based terminal IDE for Python and C/C++ with dynamic buffer control and tmux integration


.SH DESCRIPTION
tide42 is a terminal-based development environment that combines tmux, Neovim, IPython, and C/C++ shells (via TermiC) in a vertically split, buffer-managed interface designed for rapid prototyping and efficient scripting.

tide42 automatically launches a tmux session with Neovim buffers configured for:
.IP \[bu] 2
Code editing
.IP \[bu] 2
IPython REPL
.IP \[bu] 2
TermiC (lightweight live shell for C/C++)

.SH OPTIONS

.TP
.BR \-\-lite ",
Launch without tmux for quick editing or low-resource systems

.TP 
.BR \-\-whereami ",
Display git installation directory.

.TP
.BR \-\-low-color ", " \-lc
Enable 88-color mode (limited compatibility; some keybindings like Home/End may not function correctly).

.TP
.BR \-\-quiet ", " \-q
Suppress verbose logging messages during initialization.

.TP
.BR \-\-update
Self-update tide42 from the GitHub repository. Requires a clean working directory.

.TP
.BR \-\-force-update
Discard uncommitted local changes and update to the latest version.

.TP
.BR \-\-version
Print the installed version and exit.

.TP
.BR \-\-help ", " \-h
Display this help message and exit.

.TP
.I filename
Optional. Open the specified file directly in Neovim within the tide42 environment.

.SH FEATURES
.IP \[bu] 2
Visual theme toggles (GRID, Portcullis, listchars)
.IP \[bu] 2
Seamless switching between buffers using intuitive hotkeys
.IP \[bu] 2
Smart paste into IPython (\e p) and TermiC (\e l) buffers
.IP \[bu] 2
Optional OpenAI API integration (\e o)
.IP \[bu] 2
Session persistence via tmux (resume where you left off after SSH reconnection)
.IP \[bu] 2
Hotkey support for maximizing panes, launching fuzzy finders, resizing windows, and more

.SH KEYBINDINGS
Keybindings within tide42 use Vim and Tmux conventions.
.IP "\e w"
Fuzzy buffer selector
.IP "\e r"
Ripgrep search
.IP "\e e"
Telescope file finder
.IP "Ctrl + q + d"
Exit and save tmux session
.IP "Ctrl + ww"
Cycle vim buffers
.IP "\e p"
Paste selection into IPython
.IP "\e l"
Paste selection into TermiC
.IP "\e z, \e s, \e x, \e b, \e n"
Preset layout configurations

.SH USAGE
.B tide42
.br
Launch the IDE session with tmux and Neovim buffers.
.br
.B tide42 filename.py
.br
Open a specific file in the edit buffer at launch.

.SH INSTALLATION
Clone the repository and run:
.RS
chmod +x install.sh && ./install.sh
.RE
Optionally, run:
.RS
sudo ./install.sh --man
.RE
To install this man page.

.SH REQUIREMENTS
- tmux  
- neovim >= 0.9.0  
- bash  
- IPython (Anaconda3 recommended)  
- TermiC (for C/C++ shell support)  
- vim-plug for plugin management

.SH FILES
/usr/local/bin/tide42  
/usr/local/bin/termic  
/usr/share/man/man1/tide42.1.gz  

.SH AUTHOR
Created by Pavle Dzakula (@logicmagix)  
Inspired by terminal-first workflows and father-son engineering.

.SH LICENSE
GNU General Public License v3.0 or later

.SH SEE ALSO
.BR tmux (1),
.BR nvim (1),
.BR ipython (1),
.BR termic (1)

